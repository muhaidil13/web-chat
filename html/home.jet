<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HOME</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox{
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">row</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <p><a href="https://github.com">Go To Github</a></p>
                <div class="form-group">
                    <label for="username">username</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="message">message</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>
                <hr>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Messages</a>
                <input type="hidden" name="action" id="action">
                <hr>
                <div class="float-end mt-2" id="status"></div>
                <div class="chatbox" id="output">

                </div>
            </div>
            <div class="col-md-4">
                <h3>Whos Online</h3>
                <ul id="online-users">
                    
                </ul>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="/static/reconnecting-websocket.min.js"></script>
    <script>

        let socket = null;
        let o = document.getElementById("output")
        let userfield = document.getElementById("username")
        let message = document.getElementById("message")

        window.onbeforeunload = function(){
            console.log("Leaving")
            let jsonData = {};
            jsonData["action"] ="left";
            socket.send(JSON.stringify(jsonData));
        }


        document.addEventListener("DOMContentLoaded",function(){
            socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws",null, {debug:true,  reconnectInterval:3000});

            const offline = `<span class="badge bg-danger">Not Connected</span>`
            const online = `<span class="badge bg-success">Connected</span>`
            let statusDiv = document.getElementById("status")

            socket.onopen = () =>{
                console.log("success to connect")
                statusDiv.innerHTML = online

            }
            socket.onclose = () => {
                console.log("connection close")
                statusDiv.innerHTML = offline
            }
            socket.onerror = error =>{
                console.log("ada masalah")
            }
            socket.onmessage = msg => {
                let data = JSON.parse(msg.data)
                switch (data.action){
                    case "list_users":
                        let ul = document.getElementById("online-users")
                        while (ul.firstChild) ul.removeChild(ul.firstChild);
                        if (data.connected_users.length > 0){
                            data.connected_users.forEach(function(item){
                                let li = document.createElement("li")
                                li.appendChild(document.createTextNode(item));
                                ul.appendChild(li)
                            });
                        }
                        break
                    case "broadcast":
                        o.innerHTML = o.innerHTML + data.message + "<br>"
                        break
                }
            }
            
            userfield.addEventListener("change",function(){
                let jsondata= {};
                jsondata["action"] = "username";
                jsondata["username"] = this.value;
                socket.send(JSON.stringify(jsondata));
            })

            document.getElementById("message").addEventListener("keydown",function(event){
                if (event.code === "Enter"){
                    if(!socket){
                        console.log("no Connection");
                        return false
                    }
                    if ((userfield.value === "" )||(message.value === "")){
                        errorMessage("Fill Username and Message")
                        return false
                    }else{
                        sendMessage()
                    }
                    event.preventDefault();
                    event.stopPropagation();
                    
                }
            })
            document.getElementById("sendBtn").addEventListener("click",function(){
                if ((userfield.value === "" )||(message.value === "")){
                    errorMessage("Fill Username and Message")
                    return false
                }else{
                    sendMessage()
                }
            })
        })
        function sendMessage(){
            let jsonData = {};
            jsonData["action"] = "broadcast";
            jsonData["username"] = document.getElementById("username").value;
            jsonData["message"] = document.getElementById("message").value;
            socket.send(JSON.stringify(jsonData))
            document.getElementById("message").value = "";
        }
        function errorMessage(msg){
            notie.alert({
                type: 'error', // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,
            })
        }
    </script>
</body>
</html>